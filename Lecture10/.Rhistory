install.packages("learnr")
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("psychotic.csv", header = TRUE, stringsAsFactors = FALSE)
str(dat)
par(mfrow = c(1, 2))
qqnorm(dat$INTEGRATED)
qqline(dat$INTEGRATED)
qqnorm(dat$STANDARD)
qqline(dat$STANDARD)
par(mfrow = c(1, 2))
qqnorm(dat$INTEGRATED, main = "Normal QQ for INTEGRATED")
qqline(dat$INTEGRATED)
qqnorm(dat$STANDARD, main = "Normal QQ for STANDARD")
qqline(dat$STANDARD)
boxplot(dat$INTEGRATED, dat$STANDARD, ylab = "Client Satisfaction",
names = c("Integrated", "Standard"))
s_int / s_sta
m_int <- mean(dat$INTEGRATED, na.rm = TRUE)
s_int <-   sd(dat$INTEGRATED, na.rm = TRUE)
m_sta <- mean(dat$STANDARD, na.rm = TRUE)
s_sta <-   sd(dat$STANDARD, na.rm = TRUE)
s_int / s_sta
s_sta / s_int
?t.test
# Paired
t.test(x = dat$STANDARD, y = dat$INTEGRATED, alternative = "greater",
mu = 0, paired = FALSE, var.equal = TRUE, conf.level = 0.98)
t.test(x = dat$STANDARD, y = dat$INTEGRATED, alternative = "greater",
mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.98)
# Paired
t.test(x = dat$INTEGRATED, y = dat$STANDARD, alternative = "greater",
mu = 0, paired = FALSE, var.equal = TRUE, conf.level = 0.98)
t.test(x = dat$INTEGRATED, y = dat$INTEGRATED, alternative = "greater",
mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.98)
# Paired
t.test(x = dat$INTEGRATED, y = dat$STANDARD, alternative = "greater",
mu = 0, paired = FALSE, var.equal = TRUE, conf.level = 0.98)
t.test(x = dat$INTEGRATED, y = dat$STANDARD, alternative = "greater",
mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.98)
# Paired
t.test(x = dat$INTEGRATED, y = dat$STANDARD, alternative = "two.sided",
mu = 0, paired = FALSE, var.equal = TRUE, conf.level = 0.94)
# Not Paired
t.test(x = dat$INTEGRATED, y = dat$STANDARD, alternative = "two.sided",
mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.94)
p_us <- l_us / n_us
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("psychotic.csv", header = TRUE, stringsAsFactors = FALSE)
str(dat)
m_int <- mean(dat$INTEGRATED, na.rm = TRUE)
s_int <-   sd(dat$INTEGRATED, na.rm = TRUE)
m_sta <- mean(dat$STANDARD, na.rm = TRUE)
s_sta <-   sd(dat$STANDARD, na.rm = TRUE)
par(mfrow = c(1, 2))
qqnorm(dat$INTEGRATED, main = "Normal QQ for INTEGRATED")
qqline(dat$INTEGRATED)
qqnorm(dat$STANDARD, main = "Normal QQ for STANDARD")
qqline(dat$STANDARD)
boxplot(dat$INTEGRATED, dat$STANDARD, ylab = "Client Satisfaction",
names = c("Integrated", "Standard"))
s_sta / s_int
# Paired
t.test(x = dat$INTEGRATED, y = dat$STANDARD, alternative = "greater",
mu = 0, paired = FALSE, var.equal = TRUE, conf.level = 0.98)
# Not Paired
t.test(x = dat$INTEGRATED, y = dat$STANDARD, alternative = "greater",
mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.98)
# Paired
t.test(x = dat$INTEGRATED, y = dat$STANDARD, alternative = "two.sided",
mu = 0, paired = FALSE, var.equal = TRUE, conf.level = 0.94)
# Not Paired
t.test(x = dat$INTEGRATED, y = dat$STANDARD, alternative = "two.sided",
mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.94)
n_us <- 300
n_ca <- 250
l_us <- 215
l_ca <- 186
p_us <- l_us / n_us
p_ca <- l_ca / n_ca
p_us; p_ca
q3_dat <- matrix(data = c(l_us, n_us - l_us, l_ca, n_ca - l_ca), byrow = FALSE)
q3_dat
q3_dat <- matrix(data = c(l_us, n_us - l_us, l_ca, n_ca - l_ca),
nrow = 2, ncol = 2, byrow = FALSE)
q3_dat
?prop.test
prop.test(x = q3_dat, alternative = "two.tailed",
conf.level = 0.97, correct = FALSE)
prop.test(x = q3_dat, alternative = "two.sided",
conf.level = 0.97, correct = FALSE)
SE <- sqrt( p_us * (1 - p_us) / n_us + p_ca * (1 - p_ca) / n_ca )
stat <- ( (p_us - p_ca) - 0 ) / SE
stat
pnorm(stat, lower.tail = FALSE)
p_pool <- ( l_us + l_ca) / (n_us + n_ca )
SE <- sqrt( p_pool * (1 - p_pool) * (1 / n_us + 1 / n_ca) )
stat <- ( (p_us - p_ca) - 0 ) / SE
stat
pnorm(stat, lower.tail = FALSE)
?prop.test
q3_dat <- matrix(data = c(l_us, n_us - l_us, l_ca, n_ca - l_ca),
nrow = 2, ncol = 2, byrow = TRUE)
prop.test(x = q3_dat, alternative = "two.sided",
conf.level = 0.97, correct = FALSE)
q3_dat
prop.test(x = q3_dat, alternative = "two.sided",
conf.level = 0.97, correct = FALSE)
p_pool <- ( l_us + l_ca) / (n_us + n_ca )
SE <- sqrt( p_pool * (1 - p_pool) * (1 / n_us + 1 / n_ca) )
stat <- ( (p_us - p_ca) - 0 ) / SE
stat
pnorm(stat, lower.tail = FALSE)
p_us - p_ca + c(-1, 1) * qnorm(1 - 0.03 + 0.03 / 2, lower.tail = FALSE) *
SE
p_us - p_ca + c(-1, 1) * qnorm(1 - 0.03 + 0.03 / 2, lower.tail = TRUE) *
SE
p_us - p_ca + c(-1, 1) * qnorm(1 - 0.03 + 0.03 / 2, lower.tail = TRUE) *
SE_nonpool
p_pool <- ( l_us + l_ca) / (n_us + n_ca )
SE <- sqrt( p_pool * (1 - p_pool) * (1 / n_us + 1 / n_ca) )
SE_nonpool <- sqrt( p_us * (1 - p_us) / n_us + p_ca * (1 - p_ca) / n_ca )
stat <- ( (p_us - p_ca) - 0 ) / SE
stat
pnorm(stat, lower.tail = FALSE)
p_us - p_ca + c(-1, 1) * qnorm(1 - 0.03 + 0.03 / 2, lower.tail = TRUE) *
SE_nonpool
p_pool <- ( l_us + l_ca) / (n_us + n_ca )
SE <- sqrt( p_pool * (1 - p_pool) * (1 / n_us + 1 / n_ca) )
SE_nonpool <- sqrt( p_us * (1 - p_us) / n_us + p_ca * (1 - p_ca) / n_ca )
stat <- ( (p_us - p_ca) - 0 ) / SE_nonpool
stat
pnorm(stat, lower.tail = FALSE)
p_pool <- ( l_us + l_ca) / (n_us + n_ca )
SE <- sqrt( p_pool * (1 - p_pool) * (1 / n_us + 1 / n_ca) )
SE_nonpool <- sqrt( p_us * (1 - p_us) / n_us + p_ca * (1 - p_ca) / n_ca )
stat <- ( (p_us - p_ca) - 0 ) / SE_nonpool
stat
pnorm(stat, lower.tail = TRUE) * 2
p_pool <- ( l_us + l_ca) / (n_us + n_ca )
SE <- sqrt( p_pool * (1 - p_pool) * (1 / n_us + 1 / n_ca) )
stat <- ( (p_us - p_ca) - 0 ) / SE
stat
pnorm(stat, lower.tail = TRUE) * 2
p_us - p_ca + c(-1, 1) * qnorm(1 - 0.03 + 0.03 / 2, lower.tail = TRUE) *
SE
0.7206^2
SE_nonpool <- sqrt( p_us * (1 - p_us) / n_us + p_ca * (1 - p_ca) / n_ca )
stat <- ( (p_us - p_ca) - 0 ) / SE_nonpool
stat
pnorm(stat, lower.tail = TRUE) * 2
prop.test(x = c(l_us, n_us - l_us), y = c(l_ca, n_ca - l_ca),
alternative = "two.sided", conf.level = 0.97, correct = FALSE)
prop.test(c(l_us, n_us - l_us), c(l_ca, n_ca - l_ca),
alternative = "two.sided", conf.level = 0.97, correct = FALSE)
prop.test(c(l_us, l_ca), c(n_us, n_ca),
alternative = "two.sided", conf.level = 0.97, correct = FALSE)
prop.test( c(l_us, l_ca), c(n_us, n_ca),
alternative = "two.sided", correct = FALSE)
prop.test( c(l_us, l_ca), c(n_us, n_ca),
alternative = "two.sided", conf.level = 0.97, correct = FALSE)
pt(stat, df = n_us + n_ca - 2, lower.tail = TRUE) * 2
pt(stat, df = n_ca - 1, lower.tail = TRUE) * 2
pt(stat, df = n_us - 1, lower.tail = TRUE) * 2
prop.test
p_pool <- ( l_us + l_ca) / (n_us + n_ca )
SE <- sqrt( p_pool * (1 - p_pool) * (1 / n_us + 1 / n_ca) )
stat <- ( (p_us - p_ca) - 0 ) / SE
stat
pnorm(stat, lower.tail = TRUE) * 2
p_us - p_ca + c(-1, 1) * qnorm(1 - 0.03 + 0.03 / 2, lower.tail = TRUE) *
SE
knitr::opts_chunk$set(echo = TRUE)
dat <- read.csv("psychotic.csv", header = TRUE, stringsAsFactors = FALSE)
str(dat)
m_int <- mean(dat$INTEGRATED, na.rm = TRUE)
s_int <-   sd(dat$INTEGRATED, na.rm = TRUE)
m_sta <- mean(dat$STANDARD, na.rm = TRUE)
s_sta <-   sd(dat$STANDARD, na.rm = TRUE)
par(mfrow = c(1, 2))
qqnorm(dat$INTEGRATED, main = "Normal QQ for INTEGRATED")
qqline(dat$INTEGRATED)
qqnorm(dat$STANDARD, main = "Normal QQ for STANDARD")
qqline(dat$STANDARD)
boxplot(dat$INTEGRATED, dat$STANDARD, ylab = "Client Satisfaction",
names = c("Integrated", "Standard"))
s_sta / s_int
# Paired
t.test(x = dat$INTEGRATED, y = dat$STANDARD, alternative = "greater",
mu = 0, paired = FALSE, var.equal = TRUE, conf.level = 0.98)
# Not Paired
t.test(x = dat$INTEGRATED, y = dat$STANDARD, alternative = "greater",
mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.98)
# Paired
t.test(x = dat$INTEGRATED, y = dat$STANDARD, alternative = "two.sided",
mu = 0, paired = FALSE, var.equal = TRUE, conf.level = 0.94)
# Not Paired
t.test(x = dat$INTEGRATED, y = dat$STANDARD, alternative = "two.sided",
mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.94)
n_us <- 300
n_ca <- 250
l_us <- 215
l_ca <- 186
p_us <- l_us / n_us
p_ca <- l_ca / n_ca
p_us; p_ca
q3_dat <- matrix(data = c(l_us, n_us - l_us, l_ca, n_ca - l_ca),
nrow = 2, ncol = 2, byrow = TRUE)
prop.test(x = q3_dat, alternative = "two.sided",
conf.level = 0.97, correct = FALSE)
SE_nonpool <- sqrt( p_us * (1 - p_us) / n_us + p_ca * (1 - p_ca) / n_ca )
stat <- ( (p_us - p_ca) - 0 ) / SE_nonpool
stat
pnorm(stat, lower.tail = TRUE) * 2
prop.test( c(l_us, l_ca), c(n_us, n_ca),
alternative = "two.sided", conf.level = 0.97, correct = FALSE)
p_us - p_ca + c(-1, 1) * qnorm(1 - 0.03 + 0.03 / 2, lower.tail = TRUE) *
SE_nonpool
p_pool <- ( l_us + l_ca) / (n_us + n_ca )
SE <- sqrt( p_pool * (1 - p_pool) * (1 / n_us + 1 / n_ca) )
stat <- ( (p_us - p_ca) - 0 ) / SE
stat
pnorm(stat, lower.tail = TRUE) * 2
p_us - p_ca + c(-1, 1) * qnorm(1 - 0.03 + 0.03 / 2, lower.tail = TRUE) *
SE
library("ggplot2")
data(diamonds)
diamonds <- diamonds[1:2000, ]
plot(x = diamonds$carat, y = diamonds$price, xlab = "Carat",
ylab = "Price", main = "Diamonds Data Set - First 2000 Observations")
mod <- lm(price ~ carat, data = diamonds)
summary(mod)
plot(x = diamonds$carat, y = diamonds$price, xlab = "Carat",
ylab = "Price", main = "Diamonds Data Set - First 2000 Observations")
lines(x = diamonds$carat, y = mod$fitted.values, col = "blue")
#text(x )
plot(x = diamonds$carat, y = diamonds$price, xlab = "Carat",
ylab = "Price", main = "Diamonds Data Set - First 2000 Observations")
lines(x = diamonds$carat, y = mod$fitted.values, col = "blue")
text(x = 0.6, y = 1000, "price = 128.8 + 3508.3 * carat", col = "blue")
mod$coefficients["Estimate", "carat"] + c(-1, 1) * qnorm(0.975, lower.tail = FALSE) *
mod$coefficients["Std. Error", "carat"]
mod$coefficients
beta1_hat <- summary(mod)$coefficients["Estimate", "carat"]
summary(mod)$coefficients
beta1_hat <- summary(mod)$coefficients["carat", "Estimate"]
beta1_SE  <- summary(mod)$coefficients["carat", "Std. Error"]
beta1_hat + c(-1, 1) * qnorm(0.975, lower.tail = FALSE) * beta1_SE
beta1_hat <- summary(mod)$coefficients["carat", "Estimate"]
beta1_SE  <- summary(mod)$coefficients["carat", "Std. Error"]
beta1_hat + c(-1, 1) * qt(0.975, df = 1998, lower.tail = FALSE) * beta1_SE
plot(x = diamonds$carat, y = mod$residuals)
128.8+3508.3*1.4
diamonds[1990:2000,]
diamonds[diamonds$carat > 1, ]
diamonds[diamonds$carat > 1.3, ]
diamonds[diamonds$carat > 1.3, ]
128.8+3508.3*1.5
library(openintro)
knitr::opts_chunk$set(echo = TRUE)
obs <- c(4, 4, 3, 5, 4, 4, 5, 4, 2, 4, 4, 2,
3, 3, 3, 4, 4, 2, 4, 4, 1, 2, 2, 3,
3, 1, 3, 3, 3, 5, 3, 2, 3, 3, 3, 3,
2, 2, 4, 2, 2, 3, 2, 4, 2, 2, 2, 3,
4, 3, 1, 2, 1, 3, 2, 4, 3, 1, 1, 4,
3, 2, 3, 2, 3, 4, 3, 4, 4, 3, 3, 4)
target <- c(rep("Low", 36), rep("High", 36))
subject <- c(rep("Low", 12), rep("Medium", 12), rep("High"), 12)
subject <- rep(subject, 2)
obs <- c(4, 4, 3, 5, 4, 4, 5, 4, 2, 4, 4, 2,
3, 3, 3, 4, 4, 2, 4, 4, 1, 2, 2, 3,
3, 1, 3, 3, 3, 5, 3, 2, 3, 3, 3, 3,
2, 2, 4, 2, 2, 3, 2, 4, 2, 2, 2, 3,
4, 3, 1, 2, 1, 3, 2, 4, 3, 1, 1, 4,
3, 2, 3, 2, 3, 4, 3, 4, 4, 3, 3, 4)
target <- c(rep("Low", 36), rep("High", 36))
subject <- c(rep("Low", 12), rep("Medium", 12), rep("High"), 12)
subject <- c(subject, subject)
obs <- c(4, 4, 3, 5, 4, 4, 5, 4, 2, 4, 4, 2,
3, 3, 3, 4, 4, 2, 4, 4, 1, 2, 2, 3,
3, 1, 3, 3, 3, 5, 3, 2, 3, 3, 3, 3,
2, 2, 4, 2, 2, 3, 2, 4, 2, 2, 2, 3,
4, 3, 1, 2, 1, 3, 2, 4, 3, 1, 1, 4,
3, 2, 3, 2, 3, 4, 3, 4, 4, 3, 3, 4)
target <- c(rep("Low", 36), rep("High", 36))
subject <- c(rep("Low", 12), rep("Medium", 12), rep("High"), 12)
subject <- c(subject, subject)
obs <- c(4, 4, 3, 5, 4, 4, 5, 4, 2, 4, 4, 2,
3, 3, 3, 4, 4, 2, 4, 4, 1, 2, 2, 3,
3, 1, 3, 3, 3, 5, 3, 2, 3, 3, 3, 3,
2, 2, 4, 2, 2, 3, 2, 4, 2, 2, 2, 3,
4, 3, 1, 2, 1, 3, 2, 4, 3, 1, 1, 4,
3, 2, 3, 2, 3, 4, 3, 4, 4, 3, 3, 4)
target <- c(rep("Low", 36), rep("High", 36))
subject <- c(rep("Low", 12), rep("Medium", 12), rep("High", 12))
subject <- rep(subject, 2)
target <- factor(target, levels = c("Low", "High"))
subject <- factor(subject, levels = c("Low", "Medium", "High"))
dat <- data.frame(Measure = obs, Self = subject, Target = target)
str(dat)
with(dat,
interaction.plot(x.factor = Self, trace.factor = Target,
response = Measure, type = "b")
)
mod <- lm(Measure ~ Self * Target, data = dat)
summary( aov( mod ))
library(openintro)
knitr::opts_chunk$set(echo = TRUE)
pchisq(q = 11.25, df = 10 - 1, lower.tail = FALSE)
c <- seq(0, 25, 0.01)
plot(c, dchisq(c, 9), type = "l", xlab = expression(chi^2), ylab = "Density")
abline(v = 16.919, h = 0)
points(12.25, 0, pch = "X", col = "red")
text(x = 20, y = 0.03, "p-val", col = "red")
pchisq(q = 11.25, df = 10 - 1, lower.tail = FALSE)
dat <- c(61, 17, 10, 12)
probs <- rep(25, 4)
chisq.test(x = dat, p = probs, correct = FALSE)
dat <- c(61, 17, 10, 12)
probs <- rep(25, 4) / 100
chisq.test(x = dat, p = probs, correct = FALSE)
pchisq(q = 70.16, df = 3, lower.tail = FALSE)
## Conclusion
We do have evidence at level $\alpha = 0.05$ to conclude that the different "cents portions" of the cheques are different in frequency; from simple visual examination, it appears clear that the first category, 0--24, has significantly more cases than the others.
pchisq(q = 70.16, df = 3, lower.tail = FALSE)
pchisq(q = 2.925, df = 2, lower.tail = FALSE)
pchisq(q = 6.529, df = 4, lower.tail = FALSE)
pchisq(q = 6.529, df = 1, lower.tail = FALSE)
dat <- data.frame(agree = c(560, 308), disagree = c(240, 92))
chisq.test(dat, correct = FALSE)
knitr::opts_chunk$set(echo = TRUE)
pulse <- c(c(78, 104, 78, 64, 60, 98, 82, 98, 90, 96),
c(60, 80, 56, 68, 68, 74, 74, 68, 62, 56)
c(76, 76, 72, 66, 72, 78, 62, 72, 74, 56)
pulse <- c(c(78, 104, 78, 64, 60, 98, 82, 98, 90, 96),
c(60, 80, 56, 68, 68, 74, 74, 68, 62, 56),
c(76, 76, 72, 66, 72, 78, 62, 72, 74, 56),
c(46, 70, 62, 66, 90, 80, 60, 58, 64, 60))
sex <- rep(rep(c("F", "M"), each = 10), 2)
Age <- rep(c("U30", "O30"), each = 20)
dat <- data.frame(Pulse = pulse,
Age = age,
Sex = sex)
pulse <- c(c(78, 104, 78, 64, 60, 98, 82, 98, 90, 96),
c(60, 80, 56, 68, 68, 74, 74, 68, 62, 56),
c(76, 76, 72, 66, 72, 78, 62, 72, 74, 56),
c(46, 70, 62, 66, 90, 80, 60, 58, 64, 60))
sex <- rep(rep(c("F", "M"), each = 10), 2)
age <- rep(c("U30", "O30"), each = 20)
dat <- data.frame(Pulse = pulse,
Age = age,
Sex = sex)
dat
dat <- data.frame(Pulse = pulse,
Age = factor(age),
Sex = factor(sex))
summary(aov(lm(Pulse ~ Sex * Age, data = dat)))
dat <- read.csv("pancake.csv", stringsAsFactors = TRUE, header = TRUE)
str(dat)
summary(aov(lm(Ratings ~ Whey * Supplement, data = dat)))
library(openintro)
knitr::opts_chunk$set(echo = TRUE)
newdata <- data.frame(weight = 0.8)
predict(mod, newdata, interval="predict")
library(openintro)
knitr::opts_chunk$set(echo = TRUE)
x <- sample(seq(1, 20, 0.1), 24)
y <- 2 * x + rnorm(24, sd = 0.5)
res <- y - predict(lm(y ~ x))
qqnorm(y = res, ylim = c(-1.1, 1.1), xlim = c(-2.2, 2.2), main = "QQ Plot")
qqline(y = res)
knitr::include_graphics("figures/variation.png")
year <- c(1960, 1973, 1986, 1995, 2002, 2003)
pizza <- c(0.15, 0.35, 1.00, 1.25, 1.75, 2.00)
subway <- c(0.15, 0.35, 1.00,1.35, 1.50, 2.00)
summary(lm(subway ~ pizza))
weight <- c(0.3, 0.4, 0.5, 0.5, 1.0, 0.7)
price  <- c(510, 1151, 1343, 1410, 5669, 2277)
plot(x = weight, y = price, xlab = "weight (carats)", ylab = "price (dollars)")
cor.test(weight, price)
summary(lm(price ~ weight))
qt(0.975, 4)
mod <- lm(price ~ weight)
summary(mod)
confint(mod)
newdata <- data.frame(weight = 0.8)
predict(mod, newdata, interval="predict")
setwd("~/Teaching/2020_MATH1052H_S62/Lectures/Lecture09")
rmarkdown::render("lecture09.Rmd", output_format = "powerpoint_presentation")
setwd("~/Teaching/2020_MATH1052H_S62/Lectures/Lecture10")
setwd("~/Teaching/2020_MATH1052H_S62/Lectures/Lecture10")
rmarkdown::render("lecture10.Rmd", output_format = "powerpoint_presentation")
